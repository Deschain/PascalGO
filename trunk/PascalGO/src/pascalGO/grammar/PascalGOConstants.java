/* Generated By:JavaCC: Do not edit this line. PascalGOConstants.java */
package pascalGO.grammar;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PascalGOConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 5;
  /** RegularExpression Id. */
  int ARRAY = 6;
  /** RegularExpression Id. */
  int BEGIN = 7;
  /** RegularExpression Id. */
  int CONST = 8;
  /** RegularExpression Id. */
  int DIV = 9;
  /** RegularExpression Id. */
  int DO = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int END = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int MOD = 14;
  /** RegularExpression Id. */
  int NOT = 15;
  /** RegularExpression Id. */
  int OF = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int PROCEDURE = 18;
  /** RegularExpression Id. */
  int PROGRAM = 19;
  /** RegularExpression Id. */
  int RECORD = 20;
  /** RegularExpression Id. */
  int THEN = 21;
  /** RegularExpression Id. */
  int TYPE = 22;
  /** RegularExpression Id. */
  int VAR = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int SUMA = 25;
  /** RegularExpression Id. */
  int RESTA = 26;
  /** RegularExpression Id. */
  int MULT = 27;
  /** RegularExpression Id. */
  int MAYOR = 28;
  /** RegularExpression Id. */
  int MAYORIG = 29;
  /** RegularExpression Id. */
  int MENOR = 30;
  /** RegularExpression Id. */
  int MENORIG = 31;
  /** RegularExpression Id. */
  int IGUAL = 32;
  /** RegularExpression Id. */
  int DESIGUAL = 33;
  /** RegularExpression Id. */
  int PARENTESISIZ = 34;
  /** RegularExpression Id. */
  int PARENTESISDE = 35;
  /** RegularExpression Id. */
  int CORCHETEIZ = 36;
  /** RegularExpression Id. */
  int CORCHETEDE = 37;
  /** RegularExpression Id. */
  int COMA = 38;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 39;
  /** RegularExpression Id. */
  int PUNTO = 40;
  /** RegularExpression Id. */
  int DOSPUNTOS = 41;
  /** RegularExpression Id. */
  int ASIGNACION = 42;
  /** RegularExpression Id. */
  int RANGO = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int CTE = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"and\"",
    "\"array\"",
    "\"begin\"",
    "\"const\"",
    "\"div\"",
    "\"do\"",
    "\"else\"",
    "\"end\"",
    "\"if\"",
    "\"mod\"",
    "\"not\"",
    "\"of\"",
    "\"or\"",
    "\"procedure\"",
    "\"program\"",
    "\"record\"",
    "\"then\"",
    "\"type\"",
    "\"var\"",
    "\"while\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"=\"",
    "\"<>\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\":\"",
    "\":=\"",
    "\"..\"",
    "<ID>",
    "<CTE>",
  };

}
